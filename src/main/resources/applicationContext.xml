<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id = "accountDao" class = "com.demo.myspring.dao.impl.AccountDaoImpl">
        <property name = "ConnectionUtils" ref = "connectionUtils"></property>
    </bean>
    <bean id = "transferService" class = "com.demo.myspring.service.impl.TransferServiceImpl">
        <property name = "AccountDao" ref = "accountDao"></property>
    </bean>

    <!--连接工具类-->
    <!--方式一：无参构造-->
    <!--<bean id = "connectionUtils" class = "com.demo.myspring.utils.ConnectionUtils"></bean>-->

    <!--事务管理器-->
    <bean id = "transactionManager" class = "com.demo.myspring.utils.TransactionManager">
        <property name = "ConnectionUtils" ref = "connectionUtils"></property>
    </bean>


    <bean id = "ProxyFactory" class = "com.demo.myspring.spring.Factory.ProxyFactory">
        <property name = "TransactionManager" ref = "transactionManager"></property>
    </bean>

    <!--连接工具类-->
    <!--方式二：静态方法，提供方法，自己new对象加入IOC容器-->
    <!--<bean id = "connectionUtils" class="com.demo.myspring.spring.Factory.CreatBeanFactory" factory-method="getInstanceConnectionUtils"></bean>-->

    <!--连接工具类-->
    <!--方式三：非静态方法，提供方法，自己new对象加入IOC容器-->
    <bean id="creatBeanFactory" class="com.demo.myspring.spring.Factory.CreatBeanFactory" ></bean>
    <!--init-methed用于指定bean对象的初始化方法，此方法会在bean对象装配后调用，必须是一个无参方法-->
    <!--用于指定bean对象的消耗方法，此方法会在bean对象销毁前执行，只能为scope是singleton时起作用-->
    <bean id = "connectionUtils" factory-bean="creatBeanFactory"  factory-method="getInstanceConnectionUtils" init-method="init" destroy-method="destroy"></bean>

</beans>